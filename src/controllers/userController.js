/* eslint-disable no-console */
/* eslint-disable quotes */
import { userService } from "~/services/userService"

// üü¢ ƒêƒÉng k√Ω
const register = async (req, res) => {
  try {
    const user = await userService.register(req.body)
    res.status(201).json({ success: true, message: "ƒêƒÉng k√Ω th√†nh c√¥ng", data: user })
  } catch (error) {
    console.error("‚ùå L·ªói register:", error)
    res.status(500).json({ success: false, message: error.message })
  }
}

// üü¢ ƒêƒÉng nh·∫≠p
const login = async (req, res) => {
  try {
    const result = await userService.login(req.body)
    res.status(200).json({
      success: true,
      message: "ƒêƒÉng nh·∫≠p th√†nh c√¥ng",
      token: result.token,
      user: result.user
    })
  } catch (error) {
    console.error("‚ùå L·ªói login:", error)
    res.status(500).json({ success: false, message: error.message })
  }
}

// üü¢ CRUD kh√°c
const getAll = async (req, res) => {
  try {
    const users = await userService.getAll()
    res.status(200).json({ success: true, data: users })
  } catch (error) {
    res.status(500).json({ success: false, message: error.message })
  }
}

const getById = async (req, res) => {
  try {
    const user = await userService.getById(req.params.id)
    if (!user) return res.status(404).json({ success: false, message: "Kh√¥ng t√¨m th·∫•y user" })
    res.status(200).json({ success: true, data: user })
  } catch (error) {
    res.status(500).json({ success: false, message: error.message })
  }
}

const create = async (req, res) => {
  try {
    const newUser = await userService.create(req.body)
    res.status(201).json({ success: true, data: newUser })
  } catch (error) {
    res.status(500).json({ success: false, message: error.message })
  }
}

const update = async (req, res) => {
  try {
    const updated = await userService.update(req.params.id, req.body)
    if (!updated) return res.status(404).json({ success: false, message: "Kh√¥ng t√¨m th·∫•y user" })
    res.status(200).json({ success: true, data: updated })
  } catch (error) {
    res.status(500).json({ success: false, message: error.message })
  }
}

const remove = async (req, res) => {
  try {
    const deleted = await userService.remove(req.params.id)
    if (!deleted) return res.status(404).json({ success: false, message: "Kh√¥ng t√¨m th·∫•y user" })
    res.status(200).json({ success: true, message: "X√≥a th√†nh c√¥ng" })
  } catch (error) {
    res.status(500).json({ success: false, message: error.message })
  }
}

export const userController = {
  register,
  login,
  getAll,
  getById,
  create,
  update,
  remove
}
