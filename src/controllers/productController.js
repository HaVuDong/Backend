/* eslint-disable quotes */
import { productService } from "~/services/productService";
import { StatusCodes } from "http-status-codes";

export const productController = {
  // üü¢ L·∫•y t·∫•t c·∫£ s·∫£n ph·∫©m
  async getAll(req, res, next) {
    try {
      const products = await productService.getAll();
      res.status(StatusCodes.OK).json({
        success: true,
        data: products
      });
    } catch (error) {
      console.error("‚ùå L·ªói khi l·∫•y danh s√°ch s·∫£n ph·∫©m:", error);
      next(error);
    }
  },

  // üü¢ L·∫•y chi ti·∫øt 1 s·∫£n ph·∫©m theo ID
  async getById(req, res, next) {
    try {
      const product = await productService.getById(req.params.id);
      if (!product) {
        return res.status(StatusCodes.NOT_FOUND).json({
          success: false,
          message: "Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m!"
        });
      }
      res.status(StatusCodes.OK).json({
        success: true,
        data: product
      });
    } catch (error) {
      console.error("‚ùå L·ªói khi l·∫•y s·∫£n ph·∫©m theo ID:", error);
      next(error);
    }
  },

  // üü° Th√™m m·ªõi s·∫£n ph·∫©m
  async create(req, res, next) {
    try {
      const data = req.body;

      // Ki·ªÉm tra d·ªØ li·ªáu c∆° b·∫£n
      if (!data.name || !data.price) {
        return res.status(StatusCodes.BAD_REQUEST).json({
          success: false,
          message: "Thi·∫øu th√¥ng tin b·∫Øt bu·ªôc: name ho·∫∑c price!"
        });
      }

      const result = await productService.create({
        ...data,
        createdAt: new Date(),
        updatedAt: new Date()
      });

      res.status(StatusCodes.CREATED).json({
        success: true,
        message: "Th√™m s·∫£n ph·∫©m th√†nh c√¥ng!",
        data: result
      });
    } catch (error) {
      console.error("‚ùå L·ªói khi th√™m s·∫£n ph·∫©m:", error);
      next(error);
    }
  },

  // üü† C·∫≠p nh·∫≠t s·∫£n ph·∫©m
  async update(req, res, next) {
    try {
      const result = await productService.update(req.params.id, {
        ...req.body,
        updatedAt: new Date()
      });
      res.status(StatusCodes.OK).json({
        success: true,
        message: "C·∫≠p nh·∫≠t s·∫£n ph·∫©m th√†nh c√¥ng!",
        data: result
      });
    } catch (error) {
      console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t s·∫£n ph·∫©m:", error);
      next(error);
    }
  },

  // üî¥ X√≥a s·∫£n ph·∫©m
  async remove(req, res, next) {
    try {
      const result = await productService.remove(req.params.id);
      res.status(StatusCodes.OK).json({
        success: true,
        message: "ƒê√£ x√≥a s·∫£n ph·∫©m th√†nh c√¥ng!",
        data: result
      });
    } catch (error) {
      console.error("‚ùå L·ªói khi x√≥a s·∫£n ph·∫©m:", error);
      next(error);
    }
  }
};
